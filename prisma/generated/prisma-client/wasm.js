
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OtpRecordScalarFieldEnum = {
  id: 'id',
  email: 'email',
  OtpCode: 'OtpCode',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tokenHash: 'tokenHash',
  issuedAt: 'issuedAt',
  expiresAt: 'expiresAt',
  revokedAt: 'revokedAt',
  replacedByHash: 'replacedByHash'
};

exports.Prisma.MediaScalarFieldEnum = {
  id: 'id',
  disk: 'disk',
  bucket: 'bucket',
  objectKey: 'objectKey',
  mimeType: 'mimeType',
  sizeBytes: 'sizeBytes',
  visibility: 'visibility',
  uploadedBy: 'uploadedBy',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  email: 'email',
  passwordHash: 'passwordHash',
  phone: 'phone',
  role: 'role',
  avatarMediaId: 'avatarMediaId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClassroomScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  tutorId: 'tutorId',
  coverMediaId: 'coverMediaId',
  isArchived: 'isArchived',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClassroomStudentScalarFieldEnum = {
  classroomId: 'classroomId',
  studentId: 'studentId',
  joinedAt: 'joinedAt',
  status: 'status'
};

exports.Prisma.JoinRequestScalarFieldEnum = {
  id: 'id',
  classroomId: 'classroomId',
  studentId: 'studentId',
  status: 'status',
  requestedAt: 'requestedAt',
  handledAt: 'handledAt'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  classroomId: 'classroomId',
  parentId: 'parentId',
  title: 'title',
  content: 'content',
  lessonType: 'lessonType',
  orderIndex: 'orderIndex',
  publishedAt: 'publishedAt'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  lessonId: 'lessonId',
  title: 'title',
  mediaId: 'mediaId',
  uploadedBy: 'uploadedBy',
  uploadedAt: 'uploadedAt'
};

exports.Prisma.ExerciseScalarFieldEnum = {
  id: 'id',
  lessonId: 'lessonId',
  title: 'title',
  description: 'description',
  attachMediaId: 'attachMediaId',
  dueAt: 'dueAt',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.ExerciseSubmissionScalarFieldEnum = {
  id: 'id',
  exerciseId: 'exerciseId',
  studentId: 'studentId',
  mediaId: 'mediaId',
  submittedAt: 'submittedAt',
  score: 'score',
  comment: 'comment',
  gradedAt: 'gradedAt'
};

exports.Prisma.QuizScalarFieldEnum = {
  id: 'id',
  lessonId: 'lessonId',
  title: 'title',
  description: 'description',
  timeLimitSec: 'timeLimitSec',
  maxAttempts: 'maxAttempts',
  shuffleQuestions: 'shuffleQuestions',
  shuffleOptions: 'shuffleOptions',
  gradingMethod: 'gradingMethod',
  showAnswersAfter: 'showAnswersAfter',
  dueAt: 'dueAt',
  isPublished: 'isPublished',
  totalPoints: 'totalPoints',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.QuizSectionScalarFieldEnum = {
  id: 'id',
  quizId: 'quizId',
  title: 'title',
  description: 'description',
  orderIndex: 'orderIndex'
};

exports.Prisma.QuizQuestionGroupScalarFieldEnum = {
  id: 'id',
  quizId: 'quizId',
  sectionId: 'sectionId',
  title: 'title',
  introText: 'introText',
  orderIndex: 'orderIndex',
  shuffleInside: 'shuffleInside',
  pointsPolicy: 'pointsPolicy',
  createdAt: 'createdAt'
};

exports.Prisma.QuizQuestionScalarFieldEnum = {
  id: 'id',
  quizId: 'quizId',
  sectionId: 'sectionId',
  groupId: 'groupId',
  content: 'content',
  explanation: 'explanation',
  questionType: 'questionType',
  points: 'points',
  orderIndex: 'orderIndex'
};

exports.Prisma.QuizOptionScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  content: 'content',
  isCorrect: 'isCorrect',
  orderIndex: 'orderIndex'
};

exports.Prisma.QuizAttemptScalarFieldEnum = {
  id: 'id',
  quizId: 'quizId',
  studentId: 'studentId',
  startedAt: 'startedAt',
  submittedAt: 'submittedAt',
  status: 'status',
  scoreRaw: 'scoreRaw',
  scoreScaled10: 'scoreScaled10'
};

exports.Prisma.QuizAnswerScalarFieldEnum = {
  attemptId: 'attemptId',
  questionId: 'questionId',
  optionId: 'optionId'
};

exports.Prisma.QuizQuestionGroupMediaScalarFieldEnum = {
  id: 'id',
  groupId: 'groupId',
  mediaId: 'mediaId',
  createdAt: 'createdAt'
};

exports.Prisma.QuizQuestionMediaScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  mediaId: 'mediaId',
  createdAt: 'createdAt'
};

exports.Prisma.QuizOptionMediaScalarFieldEnum = {
  id: 'id',
  optionId: 'optionId',
  mediaId: 'mediaId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  student: 'student',
  admin: 'admin',
  rootAdmin: 'rootAdmin'
};

exports.LessonType = exports.$Enums.LessonType = {
  lesson: 'lesson',
  exercise: 'exercise',
  quiz: 'quiz'
};

exports.Prisma.ModelName = {
  OtpRecord: 'OtpRecord',
  RefreshToken: 'RefreshToken',
  Media: 'Media',
  User: 'User',
  Classroom: 'Classroom',
  ClassroomStudent: 'ClassroomStudent',
  JoinRequest: 'JoinRequest',
  Lesson: 'Lesson',
  Material: 'Material',
  Exercise: 'Exercise',
  ExerciseSubmission: 'ExerciseSubmission',
  Quiz: 'Quiz',
  QuizSection: 'QuizSection',
  QuizQuestionGroup: 'QuizQuestionGroup',
  QuizQuestion: 'QuizQuestion',
  QuizOption: 'QuizOption',
  QuizAttempt: 'QuizAttempt',
  QuizAnswer: 'QuizAnswer',
  QuizQuestionGroupMedia: 'QuizQuestionGroupMedia',
  QuizQuestionMedia: 'QuizQuestionMedia',
  QuizOptionMedia: 'QuizOptionMedia'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Learning\\University\\2025-2026\\HK1\\do-an-server2\\prisma\\generated\\prisma-client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Learning\\University\\2025-2026\\HK1\\do-an-server2\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/prisma-client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel OtpRecord {\n  id        BigInt   @id @default(autoincrement())\n  email     String   @db.VarChar(255)\n  OtpCode   String   @db.Char(64)\n  createdAt DateTime @default(now()) @db.Timestamp(0)\n  expiresAt DateTime @db.Timestamp(0)\n\n  @@index([email, OtpCode, expiresAt(sort: Desc)], map: \"IX_OtpRecords_Email_Code\")\n}\n\n// =========================================\n// REFRESH TOKENS\n// =========================================\n\nmodel RefreshToken {\n  id             BigInt    @id @default(autoincrement())\n  userId         Int\n  tokenHash      String    @db.Char(64)\n  issuedAt       DateTime  @default(now()) @db.Timestamp(0)\n  expiresAt      DateTime  @db.Timestamp(0)\n  revokedAt      DateTime? @db.Timestamp(0)\n  replacedByHash String?   @db.Char(64)\n\n  user User @relation(fields: [userId], references: [id])\n\n  @@unique([tokenHash], map: \"UQ_RefreshTokens_TokenHash\")\n  @@index([userId, expiresAt(sort: Desc)], map: \"IX_RefreshTokens_User_Expires\")\n  @@index([replacedByHash], map: \"IX_RefreshTokens_Replaced\")\n}\n\nmodel Media {\n  id         Int      @id @default(autoincrement())\n  disk       String   @db.VarChar(30)\n  bucket     String?  @db.VarChar(100)\n  objectKey  String   @db.VarChar(700)\n  mimeType   String?  @db.VarChar(100)\n  sizeBytes  BigInt?\n  visibility String   @default(\"private\") @db.VarChar(10)\n  uploadedBy Int?\n  createdAt  DateTime @default(now()) @db.Timestamp(0)\n\n  uploader                User?                    @relation(\"MediaUploadedBy\", fields: [uploadedBy], references: [id])\n  userAvatars             User[]                   @relation(\"UserAvatar\")\n  classroomCovers         Classroom[]\n  materials               Material[]\n  exerciseAttachments     Exercise[]\n  exerciseSubmissions     ExerciseSubmission[]\n  quizQuestionGroupMedias QuizQuestionGroupMedia[]\n  quizQuestionMedias      QuizQuestionMedia[]\n  quizOptionMedias        QuizOptionMedia[]\n\n  @@unique([bucket, objectKey], map: \"UQ_Media_Bucket_Key\")\n}\n\nenum Role {\n  student\n  admin\n  rootAdmin\n}\n\nmodel User {\n  id            Int      @id @default(autoincrement())\n  fullName      String   @db.VarChar(150)\n  email         String   @unique @db.VarChar(255)\n  passwordHash  String   @db.Char(255)\n  phone         String   @db.VarChar(30)\n  role          Role     @default(student)\n  avatarMediaId Int?\n  isActive      Boolean  @default(true)\n  createdAt     DateTime @default(now()) @db.Timestamp(0)\n  updatedAt     DateTime @default(now()) @updatedAt @db.Timestamp(0)\n\n  avatarMedia         Media?               @relation(\"UserAvatar\", fields: [avatarMediaId], references: [id])\n  uploadedMedia       Media[]              @relation(\"MediaUploadedBy\")\n  taughtClassrooms    Classroom[]          @relation(\"ClassroomTeacher\")\n  createdClassrooms   Classroom[]          @relation(\"ClassroomCreator\")\n  classroomStudents   ClassroomStudent[]\n  joinRequests        JoinRequest[]        @relation(\"JoinRequestStudent\")\n  uploadedMaterials   Material[]\n  createdExercises    Exercise[]\n  exerciseSubmissions ExerciseSubmission[]\n  createdQuizzes      Quiz[]\n  quizAttempts        QuizAttempt[]\n  refreshTokens       RefreshToken[]\n}\n\n// =========================================\n// CLASSROOMS & MEMBERSHIP\n// =========================================\n\nmodel Classroom {\n  id           Int      @id @default(autoincrement())\n  name         String   @db.VarChar(200)\n  description  String?\n  tutorId      Int\n  coverMediaId Int?\n  isArchived   Boolean  @default(false)\n  createdBy    Int\n  createdAt    DateTime @default(now()) @db.Timestamp(0)\n  updatedAt    DateTime @default(now()) @updatedAt @db.Timestamp(0)\n\n  tutor             User               @relation(\"ClassroomTeacher\", fields: [tutorId], references: [id])\n  creator           User               @relation(\"ClassroomCreator\", fields: [createdBy], references: [id])\n  coverMedia        Media?             @relation(fields: [coverMediaId], references: [id])\n  classroomStudents ClassroomStudent[]\n  joinRequests      JoinRequest[]\n  lessons           Lesson[]\n}\n\nmodel ClassroomStudent {\n  classroomId Int\n  studentId   Int\n  joinedAt    DateTime @default(now()) @db.Timestamp(0)\n  status      Int      @default(1) @db.SmallInt\n\n  classroom Classroom @relation(fields: [classroomId], references: [id])\n  student   User      @relation(fields: [studentId], references: [id])\n\n  @@id([classroomId, studentId])\n}\n\nmodel JoinRequest {\n  id          Int       @id @default(autoincrement())\n  classroomId Int\n  studentId   Int\n  status      String    @default(\"pending\") @db.VarChar(20)\n  requestedAt DateTime  @default(now()) @db.Timestamp(0)\n  handledAt   DateTime? @db.Timestamp(0)\n\n  classroom Classroom @relation(fields: [classroomId], references: [id])\n  student   User      @relation(\"JoinRequestStudent\", fields: [studentId], references: [id])\n}\n\n// =========================================\n// LESSONS & MATERIALS\n// =========================================\n\nenum LessonType {\n  lesson\n  exercise\n  quiz\n}\n\nmodel Lesson {\n  id          Int        @id @default(autoincrement())\n  classroomId Int\n  parentId    Int?\n  title       String     @db.VarChar(200)\n  content     String?\n  lessonType  LessonType @default(lesson)\n  orderIndex  Int        @default(0)\n  publishedAt DateTime?  @db.Timestamp(0)\n\n  classroom  Classroom  @relation(fields: [classroomId], references: [id])\n  materials  Material[]\n  exercises  Exercise[]\n  quizzes    Quiz[]\n  parent     Lesson?    @relation(\"LessonParent\", fields: [parentId], references: [id])\n  subLessons Lesson[]   @relation(\"LessonParent\")\n}\n\nmodel Material {\n  id         Int      @id @default(autoincrement())\n  lessonId   Int\n  title      String   @db.VarChar(200)\n  mediaId    Int\n  uploadedBy Int\n  uploadedAt DateTime @default(now()) @db.Timestamp(0)\n\n  lesson   Lesson? @relation(fields: [lessonId], references: [id])\n  media    Media   @relation(fields: [mediaId], references: [id])\n  uploader User    @relation(fields: [uploadedBy], references: [id])\n}\n\n// =========================================\n// EXERCISES & SUBMISSIONS\n// =========================================\n\nmodel Exercise {\n  id            Int       @id @default(autoincrement())\n  lessonId      Int\n  title         String    @db.VarChar(200)\n  description   String?\n  attachMediaId Int?\n  dueAt         DateTime? @db.Timestamp(0)\n  createdBy     Int\n  createdAt     DateTime  @default(now()) @db.Timestamp(0)\n  updatedAt     DateTime  @default(now()) @updatedAt @db.Timestamp(0)\n  deletedAt     DateTime? @db.Timestamp(0)\n\n  lesson      Lesson?              @relation(fields: [lessonId], references: [id])\n  attachMedia Media?               @relation(fields: [attachMediaId], references: [id])\n  creator     User                 @relation(fields: [createdBy], references: [id])\n  submissions ExerciseSubmission[]\n}\n\nmodel ExerciseSubmission {\n  id          Int       @id @default(autoincrement())\n  exerciseId  Int\n  studentId   Int\n  mediaId     Int\n  submittedAt DateTime  @default(now())\n  score       Decimal?  @db.Decimal(4, 2)\n  comment     String?   @db.VarChar(1000)\n  gradedAt    DateTime? @db.Timestamp(0)\n\n  exercise Exercise @relation(fields: [exerciseId], references: [id])\n  student  User     @relation(fields: [studentId], references: [id])\n  media    Media    @relation(fields: [mediaId], references: [id])\n\n  @@unique([exerciseId, studentId], map: \"UQ_Submission_OnePerStudent\")\n}\n\n// =========================================\n// QUIZZES\n// =========================================\n\nmodel Quiz {\n  id               Int       @id @default(autoincrement())\n  lessonId         Int\n  title            String    @db.VarChar(200)\n  description      String?\n  timeLimitSec     Int?\n  maxAttempts      Int       @default(1)\n  shuffleQuestions Boolean   @default(true)\n  shuffleOptions   Boolean   @default(true)\n  gradingMethod    String    @default(\"highest\") @db.VarChar(20)\n  showAnswersAfter String    @default(\"after_due\") @db.VarChar(20)\n  dueAt            DateTime? @db.Timestamp(0)\n  isPublished      Boolean   @default(false)\n  totalPoints      Decimal   @default(0) @db.Decimal(10, 2)\n  createdBy        Int\n  createdAt        DateTime  @default(now()) @db.Timestamp(0)\n  updatedAt        DateTime  @default(now()) @updatedAt @db.Timestamp(0)\n  deletedAt        DateTime? @db.Timestamp(0)\n\n  lesson         Lesson              @relation(fields: [lessonId], references: [id])\n  creator        User                @relation(fields: [createdBy], references: [id])\n  sections       QuizSection[]\n  questionGroups QuizQuestionGroup[]\n  questions      QuizQuestion[]\n  attempts       QuizAttempt[]\n}\n\nmodel QuizSection {\n  id          Int     @id @default(autoincrement())\n  quizId      Int\n  title       String  @db.VarChar(200)\n  description String?\n  orderIndex  Int     @default(0)\n\n  quiz           Quiz                @relation(fields: [quizId], references: [id])\n  questionGroups QuizQuestionGroup[]\n  questions      QuizQuestion[]\n}\n\nmodel QuizQuestionGroup {\n  id            Int      @id @default(autoincrement())\n  quizId        Int\n  sectionId     Int?\n  title         String?  @db.VarChar(200)\n  introText     String?  @db.VarChar(1000)\n  orderIndex    Int      @default(0)\n  shuffleInside Boolean  @default(false)\n  pointsPolicy  String   @default(\"sum\") @db.VarChar(20)\n  createdAt     DateTime @default(now()) @db.Timestamp(0)\n\n  quiz      Quiz                     @relation(fields: [quizId], references: [id])\n  section   QuizSection?             @relation(fields: [sectionId], references: [id])\n  questions QuizQuestion[]\n  medias    QuizQuestionGroupMedia[]\n}\n\nmodel QuizQuestion {\n  id           Int     @id @default(autoincrement())\n  quizId       Int\n  sectionId    Int?\n  groupId      Int?\n  content      String  @db.VarChar(1000)\n  explanation  String? @db.VarChar(1000)\n  questionType String  @default(\"single_choice\") @db.VarChar(20)\n  points       Decimal @default(1.0) @db.Decimal(10, 2)\n  orderIndex   Int     @default(0)\n\n  quiz    Quiz                @relation(fields: [quizId], references: [id])\n  section QuizSection?        @relation(fields: [sectionId], references: [id])\n  group   QuizQuestionGroup?  @relation(fields: [groupId], references: [id])\n  options QuizOption[]\n  answers QuizAnswer[]\n  medias  QuizQuestionMedia[]\n}\n\nmodel QuizOption {\n  id         Int     @id @default(autoincrement())\n  questionId Int\n  content    String  @db.VarChar(500)\n  isCorrect  Boolean @default(false)\n  orderIndex Int     @default(0)\n\n  question QuizQuestion      @relation(fields: [questionId], references: [id])\n  answers  QuizAnswer[]\n  medias   QuizOptionMedia[]\n}\n\nmodel QuizAttempt {\n  id            Int       @id @default(autoincrement())\n  quizId        Int\n  studentId     Int\n  startedAt     DateTime  @default(now()) @db.Timestamp(0)\n  submittedAt   DateTime? @db.Timestamp(0)\n  status        String    @default(\"in_progress\") @db.VarChar(20)\n  scoreRaw      Decimal?  @db.Decimal(10, 2)\n  scoreScaled10 Decimal?  @db.Decimal(4, 2)\n\n  quiz    Quiz         @relation(fields: [quizId], references: [id])\n  student User         @relation(fields: [studentId], references: [id])\n  answers QuizAnswer[]\n}\n\nmodel QuizAnswer {\n  attemptId  Int\n  questionId Int\n  optionId   Int\n\n  attempt  QuizAttempt  @relation(fields: [attemptId], references: [id], onDelete: Cascade)\n  question QuizQuestion @relation(fields: [questionId], references: [id])\n  option   QuizOption   @relation(fields: [optionId], references: [id])\n\n  @@id([attemptId, questionId, optionId])\n}\n\n// =========================================\n// MEDIA RELATIONS\n// =========================================\n\nmodel QuizQuestionGroupMedia {\n  id        Int      @id @default(autoincrement())\n  groupId   Int\n  mediaId   Int\n  createdAt DateTime @default(now()) @db.Timestamp(0)\n\n  group QuizQuestionGroup @relation(fields: [groupId], references: [id])\n  media Media             @relation(fields: [mediaId], references: [id])\n\n  @@unique([groupId, mediaId], map: \"UQ_QQGroupMed\")\n}\n\nmodel QuizQuestionMedia {\n  id         Int      @id @default(autoincrement())\n  questionId Int\n  mediaId    Int\n  createdAt  DateTime @default(now()) @db.Timestamp(0)\n\n  question QuizQuestion @relation(fields: [questionId], references: [id])\n  media    Media        @relation(fields: [mediaId], references: [id])\n\n  @@unique([questionId, mediaId], map: \"UQ_QQMed\")\n}\n\nmodel QuizOptionMedia {\n  id        Int      @id @default(autoincrement())\n  optionId  Int\n  mediaId   Int\n  createdAt DateTime @default(now()) @db.Timestamp(0)\n\n  option QuizOption @relation(fields: [optionId], references: [id])\n  media  Media      @relation(fields: [mediaId], references: [id])\n\n  @@unique([optionId, mediaId], map: \"UQ_QOMed\")\n}\n",
  "inlineSchemaHash": "dc87445f3d3db7b151956853c88ed235140602821519d8bd09562007d7e3d053",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"OtpRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"OtpCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokenHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"replacedByHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":null},\"Media\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"disk\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bucket\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"objectKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sizeBytes\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"visibility\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploader\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MediaUploadedBy\"},{\"name\":\"userAvatars\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAvatar\"},{\"name\":\"classroomCovers\",\"kind\":\"object\",\"type\":\"Classroom\",\"relationName\":\"ClassroomToMedia\"},{\"name\":\"materials\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"MaterialToMedia\"},{\"name\":\"exerciseAttachments\",\"kind\":\"object\",\"type\":\"Exercise\",\"relationName\":\"ExerciseToMedia\"},{\"name\":\"exerciseSubmissions\",\"kind\":\"object\",\"type\":\"ExerciseSubmission\",\"relationName\":\"ExerciseSubmissionToMedia\"},{\"name\":\"quizQuestionGroupMedias\",\"kind\":\"object\",\"type\":\"QuizQuestionGroupMedia\",\"relationName\":\"MediaToQuizQuestionGroupMedia\"},{\"name\":\"quizQuestionMedias\",\"kind\":\"object\",\"type\":\"QuizQuestionMedia\",\"relationName\":\"MediaToQuizQuestionMedia\"},{\"name\":\"quizOptionMedias\",\"kind\":\"object\",\"type\":\"QuizOptionMedia\",\"relationName\":\"MediaToQuizOptionMedia\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"avatarMediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"avatarMedia\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"UserAvatar\"},{\"name\":\"uploadedMedia\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MediaUploadedBy\"},{\"name\":\"taughtClassrooms\",\"kind\":\"object\",\"type\":\"Classroom\",\"relationName\":\"ClassroomTeacher\"},{\"name\":\"createdClassrooms\",\"kind\":\"object\",\"type\":\"Classroom\",\"relationName\":\"ClassroomCreator\"},{\"name\":\"classroomStudents\",\"kind\":\"object\",\"type\":\"ClassroomStudent\",\"relationName\":\"ClassroomStudentToUser\"},{\"name\":\"joinRequests\",\"kind\":\"object\",\"type\":\"JoinRequest\",\"relationName\":\"JoinRequestStudent\"},{\"name\":\"uploadedMaterials\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"MaterialToUser\"},{\"name\":\"createdExercises\",\"kind\":\"object\",\"type\":\"Exercise\",\"relationName\":\"ExerciseToUser\"},{\"name\":\"exerciseSubmissions\",\"kind\":\"object\",\"type\":\"ExerciseSubmission\",\"relationName\":\"ExerciseSubmissionToUser\"},{\"name\":\"createdQuizzes\",\"kind\":\"object\",\"type\":\"Quiz\",\"relationName\":\"QuizToUser\"},{\"name\":\"quizAttempts\",\"kind\":\"object\",\"type\":\"QuizAttempt\",\"relationName\":\"QuizAttemptToUser\"},{\"name\":\"refreshTokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":null},\"Classroom\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tutorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"coverMediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tutor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClassroomTeacher\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClassroomCreator\"},{\"name\":\"coverMedia\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"ClassroomToMedia\"},{\"name\":\"classroomStudents\",\"kind\":\"object\",\"type\":\"ClassroomStudent\",\"relationName\":\"ClassroomToClassroomStudent\"},{\"name\":\"joinRequests\",\"kind\":\"object\",\"type\":\"JoinRequest\",\"relationName\":\"ClassroomToJoinRequest\"},{\"name\":\"lessons\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"ClassroomToLesson\"}],\"dbName\":null},\"ClassroomStudent\":{\"fields\":[{\"name\":\"classroomId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"classroom\",\"kind\":\"object\",\"type\":\"Classroom\",\"relationName\":\"ClassroomToClassroomStudent\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClassroomStudentToUser\"}],\"dbName\":null},\"JoinRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"classroomId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"handledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"classroom\",\"kind\":\"object\",\"type\":\"Classroom\",\"relationName\":\"ClassroomToJoinRequest\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JoinRequestStudent\"}],\"dbName\":null},\"Lesson\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"classroomId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lessonType\",\"kind\":\"enum\",\"type\":\"LessonType\"},{\"name\":\"orderIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"classroom\",\"kind\":\"object\",\"type\":\"Classroom\",\"relationName\":\"ClassroomToLesson\"},{\"name\":\"materials\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"LessonToMaterial\"},{\"name\":\"exercises\",\"kind\":\"object\",\"type\":\"Exercise\",\"relationName\":\"ExerciseToLesson\"},{\"name\":\"quizzes\",\"kind\":\"object\",\"type\":\"Quiz\",\"relationName\":\"LessonToQuiz\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"LessonParent\"},{\"name\":\"subLessons\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"LessonParent\"}],\"dbName\":null},\"Material\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lessonId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lesson\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"LessonToMaterial\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MaterialToMedia\"},{\"name\":\"uploader\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MaterialToUser\"}],\"dbName\":null},\"Exercise\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lessonId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachMediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dueAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lesson\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"ExerciseToLesson\"},{\"name\":\"attachMedia\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"ExerciseToMedia\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExerciseToUser\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"ExerciseSubmission\",\"relationName\":\"ExerciseToExerciseSubmission\"}],\"dbName\":null},\"ExerciseSubmission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"exerciseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gradedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"exercise\",\"kind\":\"object\",\"type\":\"Exercise\",\"relationName\":\"ExerciseToExerciseSubmission\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExerciseSubmissionToUser\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"ExerciseSubmissionToMedia\"}],\"dbName\":null},\"Quiz\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lessonId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeLimitSec\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxAttempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shuffleQuestions\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"shuffleOptions\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"gradingMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"showAnswersAfter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dueAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"totalPoints\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lesson\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"LessonToQuiz\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuizToUser\"},{\"name\":\"sections\",\"kind\":\"object\",\"type\":\"QuizSection\",\"relationName\":\"QuizToQuizSection\"},{\"name\":\"questionGroups\",\"kind\":\"object\",\"type\":\"QuizQuestionGroup\",\"relationName\":\"QuizToQuizQuestionGroup\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"QuizQuestion\",\"relationName\":\"QuizToQuizQuestion\"},{\"name\":\"attempts\",\"kind\":\"object\",\"type\":\"QuizAttempt\",\"relationName\":\"QuizToQuizAttempt\"}],\"dbName\":null},\"QuizSection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quizId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quiz\",\"kind\":\"object\",\"type\":\"Quiz\",\"relationName\":\"QuizToQuizSection\"},{\"name\":\"questionGroups\",\"kind\":\"object\",\"type\":\"QuizQuestionGroup\",\"relationName\":\"QuizQuestionGroupToQuizSection\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"QuizQuestion\",\"relationName\":\"QuizQuestionToQuizSection\"}],\"dbName\":null},\"QuizQuestionGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quizId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"introText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shuffleInside\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pointsPolicy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quiz\",\"kind\":\"object\",\"type\":\"Quiz\",\"relationName\":\"QuizToQuizQuestionGroup\"},{\"name\":\"section\",\"kind\":\"object\",\"type\":\"QuizSection\",\"relationName\":\"QuizQuestionGroupToQuizSection\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"QuizQuestion\",\"relationName\":\"QuizQuestionToQuizQuestionGroup\"},{\"name\":\"medias\",\"kind\":\"object\",\"type\":\"QuizQuestionGroupMedia\",\"relationName\":\"QuizQuestionGroupToQuizQuestionGroupMedia\"}],\"dbName\":null},\"QuizQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quizId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sectionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"explanation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"orderIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quiz\",\"kind\":\"object\",\"type\":\"Quiz\",\"relationName\":\"QuizToQuizQuestion\"},{\"name\":\"section\",\"kind\":\"object\",\"type\":\"QuizSection\",\"relationName\":\"QuizQuestionToQuizSection\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"QuizQuestionGroup\",\"relationName\":\"QuizQuestionToQuizQuestionGroup\"},{\"name\":\"options\",\"kind\":\"object\",\"type\":\"QuizOption\",\"relationName\":\"QuizOptionToQuizQuestion\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"QuizAnswer\",\"relationName\":\"QuizAnswerToQuizQuestion\"},{\"name\":\"medias\",\"kind\":\"object\",\"type\":\"QuizQuestionMedia\",\"relationName\":\"QuizQuestionToQuizQuestionMedia\"}],\"dbName\":null},\"QuizOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCorrect\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"orderIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"QuizQuestion\",\"relationName\":\"QuizOptionToQuizQuestion\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"QuizAnswer\",\"relationName\":\"QuizAnswerToQuizOption\"},{\"name\":\"medias\",\"kind\":\"object\",\"type\":\"QuizOptionMedia\",\"relationName\":\"QuizOptionToQuizOptionMedia\"}],\"dbName\":null},\"QuizAttempt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quizId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scoreRaw\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"scoreScaled10\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"quiz\",\"kind\":\"object\",\"type\":\"Quiz\",\"relationName\":\"QuizToQuizAttempt\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuizAttemptToUser\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"QuizAnswer\",\"relationName\":\"QuizAnswerToQuizAttempt\"}],\"dbName\":null},\"QuizAnswer\":{\"fields\":[{\"name\":\"attemptId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"optionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attempt\",\"kind\":\"object\",\"type\":\"QuizAttempt\",\"relationName\":\"QuizAnswerToQuizAttempt\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"QuizQuestion\",\"relationName\":\"QuizAnswerToQuizQuestion\"},{\"name\":\"option\",\"kind\":\"object\",\"type\":\"QuizOption\",\"relationName\":\"QuizAnswerToQuizOption\"}],\"dbName\":null},\"QuizQuestionGroupMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"QuizQuestionGroup\",\"relationName\":\"QuizQuestionGroupToQuizQuestionGroupMedia\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MediaToQuizQuestionGroupMedia\"}],\"dbName\":null},\"QuizQuestionMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"QuizQuestion\",\"relationName\":\"QuizQuestionToQuizQuestionMedia\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MediaToQuizQuestionMedia\"}],\"dbName\":null},\"QuizOptionMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"optionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mediaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"option\",\"kind\":\"object\",\"type\":\"QuizOption\",\"relationName\":\"QuizOptionToQuizOptionMedia\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MediaToQuizOptionMedia\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

